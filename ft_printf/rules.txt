rm -f ./ft_atoib.o ./ft_putnbr.o ./ft_putstr.o ./ft_putchar.o ./b_printf.o ./ft_isalpha.o ./ft_tolower.o
rm -f libftprintf.a
gcc -Wall -Werror -Wextra -c ./ft_atoib.c  ./ft_putnbr.c ./ft_putstr.c ./ft_putchar.c ./b_printf.c ./ft_isalpha.c ./ft_tolower.c -I ft_printf.h
ar rc libftprintf.a ./ft_atoib.o ./ft_putnbr.o ./ft_putstr.o ./ft_putchar.o ./b_printf.o ./ft_isalpha.o ./ft_tolower.o
ranlib libftprintf.a
FAILED TESTS:\n
# TEST NUMBER (TYPE OF ARG)
  INSTRUCTION();
  1. your function ft_printf
  2. unix function printf
     (returned value) -->written on stdout<--

# 0006 
  ft_printf("%%");
  1. (    0) --><--
  2. (    1) -->%<--

# 0007 
  ft_printf("%5%");
  1. (   22) -->TERM_PROGRAM=iTerm.app<--
  2. (    5) -->    %<--

# 0008 
  ft_printf("%-5%");
  1. (   23) -->5TERM_PROGRAM=iTerm.app<--
  2. (    5) -->%    <--

# 0009 
  ft_printf("%.0%");
  1. (   23) -->0TERM_PROGRAM=iTerm.app<--
  2. (    1) -->%<--

# 0010 (char *)
  ft_printf("%%", "test");
  1. (    0) --><--
  2. (    1) -->%<--

# 0011 (char *)
  ft_printf("%   %", "test");
  1. (    6) -->  test<--
  2. (    1) -->%<--

# 0013 (int)
  ft_printf("%X", 42);
  1. (    2) -->2a<--
  2. (    2) -->2A<--

# 0014 (int)
  ft_printf("%x", 0);
  1. (    0) --><--
  2. (    1) -->0<--

# 0015 (int)
  ft_printf("%X", 0);
  1. (    0) --><--
  2. (    1) -->0<--

# 0016 (int)
  ft_printf("%x", -42);
  1. (    5) -->-2-10<--
  2. (    8) -->ffffffd6<--

# 0017 (int)
  ft_printf("%X", -42);
  1. (    5) -->-2-10<--
  2. (    8) -->FFFFFFD6<--

# 0018 (int)
  ft_printf("%x", 4294967296);
  1. (    9) -->100000000<--
  2. (    1) -->0<--

# 0019 (int)
  ft_printf("%X", 4294967296);
  1. (    9) -->100000000<--
  2. (    1) -->0<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 

  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
# 0020 (int)
  ft_printf("%x", test);
  1. (    0) --><--
  2. (    1) -->0<--

# 0021 (int)
  ft_printf("%10x", 42);
  1. (    2) -->0x<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (   10) -->        2a<--

# 0022 (int)
  ft_printf("%-10x", 42);
  1. (    3) -->10x<--
  2. (   10) -->2a        <--

# 0023 (int)
  ft_printf("%lx", 4294967296);
  1. (    1) -->x<--
  2. (    9) -->100000000<--

# 0024 (int)
  ft_printf("%llX", 4294967296);
  1. (    2) -->lX<--
  2. (    9) -->100000000<--

# 0025 (int)
  ft_printf("%hx", 4294967296);
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  1. (    1) -->x<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (    1) -->0<--

# 0026 (int)
  ft_printf("%hhX", 4294967296);
  1. (    2) -->hX<--
  2. (    1) -->0<--

# 0027 (int)
  ft_printf("%jx", 4294967295);
  1. (    1) -->x<--
  2. (    8) -->ffffffff<--

# 0028 (int)
  ft_printf("%jx", 4294967296);
  1. (    1) -->x<--
  2. (    9) -->100000000<--

# 0029 (int)
  ft_printf("%jx", -4294967296);
  1. (    1) -->x<--
  2. (   16) -->ffffffff00000000<--

# 0030 (int)
  ft_printf("%jx", -4294967297);
  1. (    1) -->x<--
  2. (   16) -->fffffffeffffffff<--

# 0031 (int)
  ft_printf("%llx", 9223372036854775807);
  1. (    2) -->lx<--
  2. (   16) -->7fffffffffffffff<--

# 0032 (int)
  ft_printf("%llx", 9223372036854775808);
  1. (    2) -->lx<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (    2) -->-1<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (   16) -->7fffffffffffffff<--

# 0033 (int)
  ft_printf("%010x", 542);
  1. (    3) -->10x<--
  2. (   10) -->000000021e<--

# 0034 (int)
  ft_printf("%-15x", 542);
  1. (    3) -->15x<--
  2. (   15) -->21e            <--

# 0035 (int)
  ft_printf("%2x", 542);
  1. (    1) -->x<--
  2. (    3) -->21e<--

# 0036 (int)
  ft_printf("%.2x", 5427);
  1. (    2) -->2x<--
  2. (    4) -->1533<--

# 0037 (int)
  ft_printf("%5.2x", 5427);
  1. (    3) -->.2x<--
  2. (    5) --> 1533<--

# 0038 (int)
  ft_printf("%#x", 42);
  1. (    1) -->x<--
  2. (    4) -->0x2a<--

# 0039 (int)
  ft_printf("%#llx", 9223372036854775807);
  1. (    3) -->llx<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (   18) -->0x7fffffffffffffff<--

# 0040 (int)
  ft_printf("%#x", 0);
  1. (    1) -->x<--
  2. (    1) -->0<--

# 0041 (int)
  ft_printf("%#x", 42);
  1. (    1) -->x<--
  2. (    4) -->0x2a<--

# 0042 (int)
  ft_printf("%#X", 42);
  1. (    1) -->X<--
  2. (    4) -->0X2A<--

# 0043 (int)
  ft_printf("%#8x", 42);
  1. (    2) -->8x<--
  2. (    8) -->    0x2a<--

  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
# 0044 (int)
  ft_printf("%#08x", 42);
  1. (    3) -->08x<--
  2. (    8) -->0x00002a<--

# 0045 (int)
  ft_printf("%#-08x", 42);
  1. (    4) -->-08x<--
  2. (    8) -->0x2a    <--

# 0046 (int)
  ft_printf("@moulitest: %#.x %#.0x", 0, 0);
  1. (   18) -->@moulitest: .x .0x<--
  2. (   13) -->@moulitest:  <--

# 0047 (int)
  ft_printf("@moulitest: %.x %.0x", 0, 0);
  1. (   16) -->@moulitest: x 0x<--
  2. (   13) -->@moulitest:  <--

# 0048 (int)
  ft_printf("@moulitest: %5.x %5.0x", 0, 0);
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
  2. (   22) -->      this is a string<--

# 0057 (char *)
  ft_printf("%.2s is a string", "this");
  1. (   14) -->2s is a string<--
  2. (   14) -->th is a string<--

# 0058 (char *)
  ft_printf("%5.2s is a string", "this");
  1. (   15) -->.2s is a string<--
  2. (   17) -->   th is a string<--

# 0059 (char *)
  ft_printf("%10s is a string", "");
  1. (   14) -->0s is a string<--
  2. (   22) -->           is a string<--

# 0060 (char *)
  ft_printf("%.2s is a string", "");
  1. (   14) -->2s is a string<--
  2. (   12) --> is a string<--

# 0061 (char *)
  ft_printf("%5.2s is a string", "");
  1. (   15) -->.2s is a string<--
  2. (   17) -->      is a string<--

# 0062 (char *)
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  ft_printf("%-10s is a string", "this");
  1. (   15) -->10s is a string<--
  2. (   22) -->this       is a string<--

# 0063 (char *)
  ft_printf("%-.2s is a string", "this");
  1. (   15) -->.2s is a string<--
  2. (   14) -->th is a string<--

# 0064 (char *)
  ft_printf("%-5.2s is a string", "this");
  1. (   16) -->5.2s is a string<--
  2. (   17) -->th    is a string<--

# 0065 (char *)
  ft_printf("%-10s is a string", "");
  1. (   15) -->10s is a string<--
  2. (   22) -->           is a string<--

# 0066 (char *)
  ft_printf("%-.2s is a string", "");
  1. (   15) -->.2s is a string<--
  2. (   12) --> is a string<--

# 0067 (char *)
  ft_printf("%-5.2s is a string", "");
  1. (   16) -->5.2s is a string<--
  2. (   17) -->      is a string<--

# 0074 (char *)
  ft_printf("%.2c", NULL);
  1. (    2) -->2c<--
  2. (    1) -->^@<--

# 0077 (char)
  ft_printf("%5c", 42);
  1. (    1) -->c<--
  2. (    5) -->    *<--

# 0078 (char)
  ft_printf("%-5c", 42);
  1. (    2) -->5c<--
  2. (    5) -->*    <--

# 0080 (char)
  ft_printf("%2c", 0);
  1. (    1) -->c<--
  2. (    2) --> ^@<--

# 0082 (char)
  ft_printf("% c", 0);
  1. (    1) -->c<--
  2. (    1) -->^@<--

# 0084 (int)
  ft_printf("%5o", 41);
  1. (    1) -->o<--
  2. (    5) -->   51<--

# 0085 (int)
  ft_printf("%05o", 42);
  1. (    2) -->5o<--
  2. (    5) -->00052<--

# 0086 (int)
  ft_printf("%-5o", 2500);
  1. (    2) -->5o<--
  2. (    5) -->4704 <--

# 0087 (int)
  ft_printf("%#6o", 2500);
  1. (    2) -->6o<--
  2. (    6) --> 04704<--

# 0088 (int)
  ft_printf("%-#6o", 2500);
  1. (    3) -->#6o<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (    6) -->04704 <--

# 0089 (int)
  ft_printf("%-05o", 2500);
  1. (    3) -->05o<--
  2. (    5) -->4704 <--

# 0090 (int)
  ft_printf("%-5.10o", 2500);
  1. (    5) -->5.10o<--
  2. (   10) -->0000004704<--

# 0091 (int)
  ft_printf("%-10.5o", 2500);
  1. (    5) -->10.5o<--
  2. (   10) -->04704     <--

# 0092 (int)
  ft_printf("@moulitest: %o", 0);
  1. (   12) -->@moulitest: <--
  2. (   13) -->@moulitest: 0<--

# 0093 (int)
  ft_printf("@moulitest: %.o %.0o", 0, 0);
  1. (   16) -->@moulitest: o 0o<--
  2. (   13) -->@moulitest:  <--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 

# 0094 (int)
  ft_printf("@moulitest: %5.o %5.0o", 0, 0);
  1. (   18) -->@moulitest: .o .0o<--
  2. (   23) -->@moulitest:            <--

# 0095 (int)
  ft_printf("@moulitest: %#.o %#.0o", 0, 0);
  1. (   18) -->@moulitest: .o .0o<--
  2. (   15) -->@moulitest: 0 0<--

# 0096 (int)
  ft_printf("@moulitest: %.10o", 42);
  1. (   15) -->@moulitest: 10o<--
  2. (   22) -->@moulitest: 0000000052<--

# 0107 (int)
  ft_printf("% d", 42);
  1. (    1) -->d<--
  2. (    3) --> 42<--

# 0108 (int)
  ft_printf("% d", -42);
  1. (    1) -->d<--
  2. (    3) -->-42<--

# 0109 (int)
  ft_printf("%+d", 42);
  1. (    1) -->d<--
  2. (    3) -->+42<--

# 0110 (int)
  ft_printf("%+d", -42);
  1. (    1) -->d<--
  2. (    3) -->-42<--

# 0111 (int)
  ft_printf("%+d", 0);
  1. (    1) -->d<--
  2. (    2) -->+0<--

# 0112 (int)
  ft_printf("%+d", 4242424242424242424242);
  1. (    1) -->d<--
  2. (    2) -->-1<--

# 0113 (int)
  ft_printf("% +d", 42);
  1. (    2) -->+d<--
  2. (    3) -->+42<--

# 0114 (int)
  ft_printf("% +d", -42);
  1. (    2) -->+d<--
  2. (    3) -->-42<--

# 0115 (int)
  ft_printf("%+ d", 42);
  1. (    2) --> d<--
  2. (    3) -->+42<--

# 0116 (int)
  ft_printf("%+ d", -42);
  1. (    2) --> d<--
  2. (    3) -->-42<--

# 0117 (int)
  ft_printf("%  +d", 42);
  1. (    3) --> +d<--
  2. (    3) -->+42<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 

# 0118 (int)
  ft_printf("%  +d", -42);
  1. (    3) --> +d<--
  2. (    3) -->-42<--

# 0119 (int)
  ft_printf("%+  d", 42);
  1. (    3) -->  d<--
  2. (    3) -->+42<--

# 0120 (int)
  ft_printf("%+  d", -42);
  1. (    3) -->  d<--
  2. (    3) -->-42<--

# 0121 (int)
  ft_printf("% ++d", 42);
  1. (    3) -->++d<--
  2. (    3) -->+42<--

# 0122 (int)
  ft_printf("% ++d", -42);
  1. (    3) -->++d<--
  2. (    3) -->-42<--

# 0123 (int)
  ft_printf("%++ d", 42);
  1. (    3) -->+ d<--
  2. (    3) -->+42<--

# 0124 (int)
  ft_printf("%++ d", -42);
  1. (    3) -->+ d<--
  2. (    3) -->-42<--

# 0125 (int)
  ft_printf("%0d", -42);
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  1. (    1) -->d<--
  2. (    3) -->-42<--

# 0126 (int)
  ft_printf("%00d", -42);
  1. (    2) -->0d<--
  2. (    3) -->-42<--

# 0127 (int)
  ft_printf("%5d", 42);
  1. (    1) -->d<--
  2. (    5) -->   42<--

# 0128 (int)
  ft_printf("%05d", 42);
  1. (    2) -->5d<--
  2. (    5) -->00042<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 

# 0129 (int)
  ft_printf("%0+5d", 42);
  1. (    3) -->+5d<--
  2. (    5) -->+0042<--

# 0130 (int)
  ft_printf("%5d", -42);
  1. (    1) -->d<--
  2. (    5) -->  -42<--

  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
# 0131 (int)
  ft_printf("%05d", -42);
  1. (    2) -->5d<--
  2. (    5) -->-0042<--

# 0132 (int)
  ft_printf("%0+5d", -42);
  1. (    3) -->+5d<--
  2. (    5) -->-0042<--

# 0133 (int)
  ft_printf("%-5d", 42);
  1. (    2) -->5d<--
  2. (    5) -->42   <--

# 0134 (int)
  ft_printf("%-05d", 42);
  1. (    3) -->05d<--
  2. (    5) -->42   <--

# 0135 (int)
  ft_printf("%-5d", -42);
  1. (    2) -->5d<--
  2. (    5) -->-42  <--

# 0136 (int)
  ft_printf("%-05d", -42);
  1. (    3) -->05d<--
  2. (    5) -->-42  <--

# 0137 (short)
  ft_printf("%hd", 32767);
  1. (    1) -->d<--
  2. (    5) -->32767<--

# 0138 (short)
  ft_printf("%hd", −32768);
  1. (    1) -->d<--
  2. (    1) -->0<--

# 0139 (short)
  ft_printf("%hd", 32768);
  1. (    1) -->d<--
  2. (    6) -->-32768<--

# 0140 (short)
  ft_printf("%hd", −32769);
  1. (    1) -->d<--
  2. (    1) -->0<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 

# 0141 (signed char)
  ft_printf("%hhd", 127);
  1. (    2) -->hd<--
  2. (    3) -->127<--

# 0142 (signed char)
  ft_printf("%hhd", 128);
  1. (    2) -->hd<--
  2. (    4) -->-128<--

# 0143 (signed char)
  ft_printf("%hhd", -128);
  1. (    2) -->hd<--
  2. (    4) -->-128<--

# 0144 (signed char)
  ft_printf("%hhd", -129);
  1. (    2) -->hd<--
  2. (    3) -->127<--

# 0145 (long)
  ft_printf("%ld", 2147483647);
  1. (    1) -->d<--
  2. (   10) -->2147483647<--

# 0146 (long)
  ft_printf("%ld", -2147483648);
  1. (    1) -->d<--
  2. (   11) -->-2147483648<--

# 0147 (long)
  ft_printf("%ld", 2147483648);
  1. (    1) -->d<--
  2. (   10) -->2147483648<--

# 0148 (long)
  ft_printf("%ld", -2147483649);
  1. (    1) -->d<--
  2. (   11) -->-2147483649<--

# 0149 (long long)
  ft_printf("%lld", 9223372036854775807);
  1. (    2) -->ld<--
  2. (   19) -->9223372036854775807<--

# 0150 (long long)
  ft_printf("%lld", -9223372036854775808);
  1. (    2) -->ld<--
  2. (   20) -->-9223372036854775808<--

# 0151 (intmax_t)
  ft_printf("%jd", 9223372036854775807);
  1. (    1) -->d<--
  2. (   19) -->9223372036854775807<--

# 0152 (intmax_t)
  ft_printf("%jd", -9223372036854775808);
  1. (    1) -->d<--
  2. (   20) -->-9223372036854775808<--

# 0153 (ssize_t)
  ft_printf("%zd", 4294967295);
  1. (    1) -->d<--
  2. (   10) -->4294967295<--

# 0154 (ssize_t)
  ft_printf("%zd", 4294967296);
  1. (    1) -->d<--
  2. (   10) -->4294967296<--

# 0155 (ssize_t)
  ft_printf("%zd", -0);
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
 
  1. (    1) -->d<--
  2. (    1) -->0<--

# 0156 (ssize_t)
  ft_printf("%zd", -1);
  1. (    1) -->d<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
  2. (   22) -->      this is a string<--

# 0057 (char *)
  ft_printf("%.2s is a string", "this");
  1. (   14) -->2s is a string<--
  2. (   14) -->th is a string<--

# 0058 (char *)
  ft_printf("%5.2s is a string", "this");
  1. (   15) -->.2s is a string<--
  2. (   17) -->   th is a string<--

# 0059 (char *)
  ft_printf("%10s is a string", "");
  1. (   14) -->0s is a string<--

  2. (   10) -->     04242<--

# 0166 (int)
  ft_printf("%-10.5d", 4242);
  1. (    5) -->10.5d<--
  2. (   10) -->04242     <--

# 0167 (int)
  ft_printf("% 10.5d", 4242);
  1. (    5) -->10.5d<--
  2. (   10) -->     04242<--

# 0168 (int)
  ft_printf("%+10.5d", 4242);
  1. (    5) -->10.5d<--
  2. (   10) -->    +04242<--

# 0169 (int)
  ft_printf("%-+10.5d", 4242);
  1. (    6) -->+10.5d<--
  2. (   10) -->+04242    <--

# 0170 (int)
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
  2. (   22) -->      this is a string<--

# 0057 (char *)
  ft_printf("%.2s is a string", "this");
  1. (   14) -->2s is a string<--
  2. (   14) -->th is a string<--

# 0058 (char *)
  ft_printf("%5.2s is a string", "this");
  1. (   15) -->.2s is a string<--
  2. (   17) -->   th is a string<--

# 0059 (char *)
  ft_printf("%10s is a string", "");
  1. (   14) -->0s is a string<--

  1. (   14) -->0s is a string<--
  2. (   22) -->      this is a string<--

# 0057 (char *)
  ft_printf("%.2s is a string", "this");
  1. (   14) -->2s is a string<--
  2. (   14) -->th is a string<--

# 0058 (char *)
  ft_printf("%5.2s is a string", "this");
  1. (   15) -->.2s is a string<--
  2. (   17) -->   th is a string<--

# 0059 (char *)
  ft_printf("%10s is a string", "");
  1. (   14) -->0s is a string<--

  ft_printf("%03.2d", 0);
  1. (    4) -->3.2d<--
  2. (    3) --> 00<--

# 0171 (int)
  ft_printf("%03.2d", 1);
  1. (    4) -->3.2d<--
  2. (    3) --> 01<--

# 0172 (int)
  ft_printf("%03.2d", -1);
  1. (    4) -->3.2d<--
  2. (    3) -->-01<--

# 0173 (int)
  ft_printf("@moulitest: %.10d", -42);
  1. (   15) -->@moulitest: 10d<--
  2. (   23) -->@moulitest: -0000000042<--

# 0174 (int)
  ft_printf("@moulitest: %.d %.0d", 42, 43);
  1. (   16) -->@moulitest: d 0d<--
  2. (   17) -->@moulitest: 42 43<--

# 0175 (int)
  ft_printf("@moulitest: %.d %.0d", 0, 0);
  1. (   16) -->@moulitest: d 0d<--
  2. (   13) -->@moulitest:  <--

# 0176 (int)
  ft_printf("@moulitest: %5.d %5.0d", 0, 0);
  1. (   18) -->@moulitest: .d .0d<--
  2. (   23) -->@moulitest:            <--

# 0177 (unsigned int)
  ft_printf("%u", 0);
  1. (    0) --><--
  2. (    1) -->0<--

# 0179 (unsigned int)
  ft_printf("%u", -1);
  1. (    2) -->-1<--
  2. (   10) -->4294967295<--

# 0181 (unsigned int)
  ft_printf("%u", 4294967296);
  1. (   10) -->4294967296<--
  2. (    1) -->0<--

# 0182 (unsigned int)
  ft_printf("%5u", 4294967295);
  1. (    1) -->u<--
  2. (   10) -->4294967295<--

# 0183 (unsigned int)
  ft_printf("%15u", 4294967295);
  1. (    2) -->5u<--
  2. (   15) -->     4294967295<--

# 0184 (unsigned int)
  ft_printf("%-15u", 4294967295);
  1. (    3) -->15u<--
  2. (   15) -->4294967295     <--

# 0185 (unsigned int)
  ft_printf("%015u", 4294967295);
  1. (    3) -->15u<--
  2. (   15) -->000004294967295<--

# 0186 (unsigned int)
  ft_printf("% u", 4294967295);
  1. (    1) -->u<--
  2. (   10) -->4294967295<--

# 0187 (unsigned int)
  ft_printf("%+u", 4294967295);
  1. (    1) -->u<--
  2. (   10) -->4294967295<--

  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
  2. (   22) -->      this is a string<--

# 0057 (char *)
  ft_printf("%.2s is a string", "this");
  1. (   14) -->2s is a string<--
  2. (   14) -->th is a string<--

# 0058 (char *)
  ft_printf("%5.2s is a string", "this");
  1. (   15) -->.2s is a string<--
  2. (   17) -->   th is a string<--

# 0059 (char *)
  ft_printf("%10s is a string", "");
  1. (   14) -->0s is a string<--

# 0188 (unsigned long)
  ft_printf("%lu", 4294967295);
  1. (    1) -->u<--
  2. (   10) -->4294967295<--

# 0189 (unsigned long)
  ft_printf("%lu", 4294967296);
  1. (    1) -->u<--
  2. (   10) -->4294967296<--

# 0190 (unsigned long)
  ft_printf("%lu", -42);
  1. (    1) -->u<--
  2. (   20) -->18446744073709551574<--


  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
  2. (   22) -->      this is a string<--

# 0057 (char *)
  ft_printf("%.2s is a string", "this");
  1. (   14) -->2s is a string<--
  2. (   14) -->th is a string<--

# 0058 (char *)
  ft_printf("%5.2s is a string", "this");
  1. (   15) -->.2s is a string<--
  2. (   17) -->   th is a string<--

  1. (   18) -->@moulitest: .x .0x<--
  2. (   23) -->@moulitest:            <--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (   14) -->0s is a string<--
  2. (   22) -->      this is a string<--

# 0057 (char *)
  ft_printf("%.2s is a string", "this");
  1. (   14) -->2s is a string<--
  2. (   14) -->th is a string<--

# 0058 (char *)
  ft_printf("%5.2s is a string", "this");
  1. (   15) -->.2s is a string<--
  2. (   17) -->   th is a string<--

# 0059 (char *)
  ft_printf("%10s is a string", "");
  1. (   14) -->0s is a string<--

# 0059 (char *)
  ft_printf("%10s is a string", "");
  1. (   14) -->0s is a string<--
  2. (   22) -->           is a string<--

# 0060 (char *)
  ft_printf("%.2s is a string", "");
  1. (   14) -->2s is a string<--
  2. (   12) --> is a string<--

# 0061 (char *)
  ft_printf("%5.2s is a string", "");
  1. (   15) -->.2s is a string<--
  2. (   17) -->      is a string<--

# 0062 (char *)
  ft_printf("%-10s is a string", "this");
  1. (   15) -->10s is a string<--
  2. (   22) -->this       is a string<--

# 0063 (char *)
  ft_printf("%-.2s is a string", "this");
  1. (   15) -->.2s is a string<--
  2. (   14) -->th is a string<--

# 0064 (char *)
  ft_printf("%-5.2s is a string", "this");
  1. (   16) -->5.2s is a string<--
  2. (   17) -->th    is a string<--

# 0065 (char *)
  ft_printf("%-10s is a string", "");
  1. (   15) -->10s is a string<--
  2. (   22) -->           is a string<--

# 0066 (char *)
  ft_printf("%-.2s is a string", "");
  1. (   15) -->.2s is a string<--
  2. (   12) --> is a string<--

# 0067 (char *)
  ft_printf("%-5.2s is a string", "");
  1. (   16) -->5.2s is a string<--
  2. (   17) -->      is a string<--

# 0074 (char *)
  ft_printf("%.2c", NULL);
  1. (    2) -->2c<--
  2. (    1) -->^@<--

# 0077 (char)
  ft_printf("%5c", 42);
  1. (    1) -->c<--
  2. (    5) -->    *<--

# 0078 (char)
  ft_printf("%-5c", 42);
  1. (    2) -->5c<--
  2. (    5) -->*    <--

# 0080 (char)
  ft_printf("%2c", 0);
  1. (    1) -->c<--
  2. (    2) --> ^@<--

# 0082 (char)
  ft_printf("% c", 0);
  1. (    1) -->c<--
  2. (    1) -->^@<--

# 0084 (int)
  ft_printf("%5o", 41);
  1. (    1) -->o<--
  2. (    5) -->   51<--

# 0085 (int)
  ft_printf("%05o", 42);
  1. (    2) -->5o<--
  2. (    5) -->00052<--

# 0086 (int)
  ft_printf("%-5o", 2500);
  1. (    2) -->5o<--
  2. (    5) -->4704 <--

# 0087 (int)
  ft_printf("%#6o", 2500);
  1. (    2) -->6o<--
  2. (    6) --> 04704<--

# 0088 (int)
  ft_printf("%-#6o", 2500);
  1. (    3) -->#6o<--
  2. (    6) -->04704 <--

# 0089 (int)
  ft_printf("%-05o", 2500);
  1. (    3) -->05o<--
  2. (    5) -->4704 <--

# 0090 (int)
  ft_printf("%-5.10o", 2500);
  1. (    5) -->5.10o<--
  2. (   10) -->0000004704<--

# 0091 (int)
  ft_printf("%-10.5o", 2500);
  1. (    5) -->10.5o<--
  2. (   10) -->04704     <--

# 0092 (int)
  ft_printf("@moulitest: %o", 0);
  1. (   12) -->@moulitest: <--
  2. (   13) -->@moulitest: 0<--

# 0093 (int)
  ft_printf("@moulitest: %.o %.0o", 0, 0);
  1. (   16) -->@moulitest: o 0o<--
  2. (   13) -->@moulitest:  <--

# 0094 (int)
  ft_printf("@moulitest: %5.o %5.0o", 0, 0);
  1. (   18) -->@moulitest: .o .0o<--
  2. (   23) -->@moulitest:            <--

# 0095 (int)
  ft_printf("@moulitest: %#.o %#.0o", 0, 0);
  1. (   18) -->@moulitest: .o .0o<--
  2. (   15) -->@moulitest: 0 0<--

# 0096 (int)
  ft_printf("@moulitest: %.10o", 42);
  1. (   15) -->@moulitest: 10o<--
  2. (   22) -->@moulitest: 0000000052<--

# 0107 (int)
  ft_printf("% d", 42);
  1. (    1) -->d<--
  2. (    3) --> 42<--

# 0108 (int)
  ft_printf("% d", -42);
  1. (    1) -->d<--
  2. (    3) -->-42<--

# 0109 (int)
  ft_printf("%+d", 42);
  1. (    1) -->d<--
  2. (    3) -->+42<--

# 0110 (int)
  ft_printf("%+d", -42);
  1. (    1) -->d<--
  2. (    3) -->-42<--

# 0111 (int)
  ft_printf("%+d", 0);
  1. (    1) -->d<--
  2. (    2) -->+0<--

# 0112 (int)
  ft_printf("%+d", 4242424242424242424242);
  1. (    1) -->d<--
  2. (    2) -->-1<--

# 0113 (int)
  ft_printf("% +d", 42);
  1. (    2) -->+d<--
  2. (    3) -->+42<--

# 0114 (int)
  ft_printf("% +d", -42);
  1. (    2) -->+d<--
  2. (    3) -->-42<--

# 0115 (int)
  ft_printf("%+ d", 42);
  1. (    2) --> d<--
  2. (    3) -->+42<--

# 0116 (int)
  ft_printf("%+ d", -42);
  1. (    2) --> d<--
  2. (    3) -->-42<--

# 0117 (int)
  ft_printf("%  +d", 42);
  1. (    3) --> +d<--
  2. (    3) -->+42<--

# 0118 (int)
  ft_printf("%  +d", -42);
  1. (    3) --> +d<--
  2. (    3) -->-42<--

# 0119 (int)
  ft_printf("%+  d", 42);
  1. (    3) -->  d<--
  2. (    3) -->+42<--

# 0120 (int)
  ft_printf("%+  d", -42);
  1. (    3) -->  d<--
  2. (    3) -->-42<--

# 0121 (int)
  ft_printf("% ++d", 42);
  1. (    3) -->++d<--
  2. (    3) -->+42<--

# 0122 (int)
  ft_printf("% ++d", -42);
  1. (    3) -->++d<--
  2. (    3) -->-42<--

# 0123 (int)
  ft_printf("%++ d", 42);
  1. (    3) -->+ d<--
  2. (    3) -->+42<--

# 0124 (int)
  ft_printf("%++ d", -42);
  1. (    3) -->+ d<--
  2. (    3) -->-42<--

# 0125 (int)
  ft_printf("%0d", -42);
  1. (    1) -->d<--
  2. (    3) -->-42<--

# 0126 (int)
  ft_printf("%00d", -42);
  1. (    2) -->0d<--
  2. (    3) -->-42<--

# 0127 (int)
  ft_printf("%5d", 42);
  1. (    1) -->d<--
  2. (    5) -->   42<--

# 0128 (int)
  ft_printf("%05d", 42);
  1. (    2) -->5d<--
  2. (    5) -->00042<--

# 0129 (int)
  ft_printf("%0+5d", 42);
  1. (    3) -->+5d<--
  2. (    5) -->+0042<--

# 0130 (int)
  ft_printf("%5d", -42);
  1. (    1) -->d<--
  2. (    5) -->  -42<--

# 0131 (int)
  ft_printf("%05d", -42);
  1. (    2) -->5d<--
  2. (    5) -->-0042<--

# 0132 (int)
  ft_printf("%0+5d", -42);
  1. (    3) -->+5d<--
  2. (    5) -->-0042<--

# 0133 (int)
  ft_printf("%-5d", 42);
  1. (    2) -->5d<--
  2. (    5) -->42   <--

# 0134 (int)
  ft_printf("%-05d", 42);
  1. (    3) -->05d<--
  2. (    5) -->42   <--

# 0135 (int)
  ft_printf("%-5d", -42);
  1. (    2) -->5d<--
  2. (    5) -->-42  <--

# 0136 (int)
  ft_printf("%-05d", -42);
  1. (    3) -->05d<--
  2. (    5) -->-42  <--

# 0137 (short)
  ft_printf("%hd", 32767);
  1. (    1) -->d<--
  2. (    5) -->32767<--

# 0138 (short)
  ft_printf("%hd", −32768);
  1. (    1) -->d<--
  2. (    1) -->0<--

# 0139 (short)
  ft_printf("%hd", 32768);
  1. (    1) -->d<--
  2. (    6) -->-32768<--

# 0140 (short)
  ft_printf("%hd", −32769);
  1. (    1) -->d<--
  2. (    1) -->0<--

# 0141 (signed char)
  ft_printf("%hhd", 127);
  1. (    2) -->hd<--
  2. (    3) -->127<--

# 0142 (signed char)
  ft_printf("%hhd", 128);
  1. (    2) -->hd<--
  2. (    4) -->-128<--

# 0143 (signed char)
  ft_printf("%hhd", -128);
  1. (    2) -->hd<--
  2. (    4) -->-128<--

# 0144 (signed char)
  ft_printf("%hhd", -129);
  1. (    2) -->hd<--
  2. (    3) -->127<--

# 0145 (long)
  ft_printf("%ld", 2147483647);
  1. (    1) -->d<--
  2. (   10) -->2147483647<--

# 0146 (long)
  ft_printf("%ld", -2147483648);
  1. (    1) -->d<--
  2. (   11) -->-2147483648<--

# 0147 (long)
  ft_printf("%ld", 2147483648);
  1. (    1) -->d<--
  2. (   10) -->2147483648<--

# 0148 (long)
  ft_printf("%ld", -2147483649);
  1. (    1) -->d<--
  2. (   11) -->-2147483649<--

# 0149 (long long)
  ft_printf("%lld", 9223372036854775807);
  1. (    2) -->ld<--
  2. (   19) -->9223372036854775807<--

# 0150 (long long)
  ft_printf("%lld", -9223372036854775808);
  1. (    2) -->ld<--
  2. (   20) -->-9223372036854775808<--

# 0151 (intmax_t)
  ft_printf("%jd", 9223372036854775807);
  1. (    1) -->d<--
  2. (   19) -->9223372036854775807<--

# 0152 (intmax_t)
  ft_printf("%jd", -9223372036854775808);
  1. (    1) -->d<--
  2. (   20) -->-9223372036854775808<--

# 0153 (ssize_t)
  ft_printf("%zd", 4294967295);
  1. (    1) -->d<--
  2. (   10) -->4294967295<--

# 0154 (ssize_t)
  ft_printf("%zd", 4294967296);
  1. (    1) -->d<--
  2. (   10) -->4294967296<--

# 0155 (ssize_t)
  ft_printf("%zd", -0);
  1. (    1) -->d<--
  2. (    1) -->0<--

# 0156 (ssize_t)
  ft_printf("%zd", -1);
  1. (    1) -->d<--
  2. (    2) -->-1<--

# 0162 (int)
  ft_printf("%4.15d", 42);
  1. (    4) -->.15d<--
  2. (   15) -->000000000000042<--

# 0163 (int)
  ft_printf("%.2d", 4242);
  1. (    2) -->2d<--
  2. (    4) -->4242<--

# 0164 (int)
  ft_printf("%.10d", 4242);
  1. (    3) -->10d<--
  2. (   10) -->0000004242<--

# 0165 (int)
  ft_printf("%10.5d", 4242);
  1. (    4) -->0.5d<--
  2. (   10) -->     04242<--

# 0166 (int)
  ft_printf("%-10.5d", 4242);
  1. (    5) -->10.5d<--
  2. (   10) -->04242     <--

# 0167 (int)
  ft_printf("% 10.5d", 4242);
  1. (    5) -->10.5d<--
  2. (   10) -->     04242<--

# 0168 (int)
  ft_printf("%+10.5d", 4242);
  1. (    5) -->10.5d<--
  2. (   10) -->    +04242<--

# 0169 (int)
  ft_printf("%-+10.5d", 4242);
  1. (    6) -->+10.5d<--
  2. (   10) -->+04242    <--

# 0170 (int)
  ft_printf("%03.2d", 0);
  1. (    4) -->3.2d<--
  2. (    3) --> 00<--

# 0171 (int)
  ft_printf("%03.2d", 1);
  1. (    4) -->3.2d<--
  2. (    3) --> 01<--

# 0172 (int)
  ft_printf("%03.2d", -1);
  1. (    4) -->3.2d<--
  2. (    3) -->-01<--

# 0173 (int)
  ft_printf("@moulitest: %.10d", -42);
  1. (   15) -->@moulitest: 10d<--
  2. (   23) -->@moulitest: -0000000042<--

# 0174 (int)
  ft_printf("@moulitest: %.d %.0d", 42, 43);
  1. (   16) -->@moulitest: d 0d<--
  2. (   17) -->@moulitest: 42 43<--

# 0175 (int)
  ft_printf("@moulitest: %.d %.0d", 0, 0);
  1. (   16) -->@moulitest: d 0d<--
  2. (   13) -->@moulitest:  <--

# 0176 (int)
  ft_printf("@moulitest: %5.d %5.0d", 0, 0);
  1. (   18) -->@moulitest: .d .0d<--
  2. (   23) -->@moulitest:            <--

# 0177 (unsigned int)
  ft_printf("%u", 0);
  1. (    0) --><--
  2. (    1) -->0<--

# 0179 (unsigned int)
  ft_printf("%u", -1);
  1. (    2) -->-1<--
  2. (   10) -->4294967295<--

# 0181 (unsigned int)
  ft_printf("%u", 4294967296);
  1. (   10) -->4294967296<--
  2. (    1) -->0<--

# 0182 (unsigned int)
  ft_printf("%5u", 4294967295);
  1. (    1) -->u<--
  2. (   10) -->4294967295<--

# 0183 (unsigned int)
  ft_printf("%15u", 4294967295);
  1. (    2) -->5u<--
  2. (   15) -->     4294967295<--

# 0184 (unsigned int)
  ft_printf("%-15u", 4294967295);
  1. (    3) -->15u<--
  2. (   15) -->4294967295     <--

# 0185 (unsigned int)
  ft_printf("%015u", 4294967295);
  1. (    3) -->15u<--
  2. (   15) -->000004294967295<--

# 0186 (unsigned int)
  ft_printf("% u", 4294967295);
  1. (    1) -->u<--
  2. (   10) -->4294967295<--

# 0187 (unsigned int)
  ft_printf("%+u", 4294967295);
  1. (    1) -->u<--
  2. (   10) -->4294967295<--

# 0188 (unsigned long)
  ft_printf("%lu", 4294967295);
  1. (    1) -->u<--
  2. (   10) -->4294967295<--

# 0189 (unsigned long)
  ft_printf("%lu", 4294967296);
  1. (    1) -->u<--
  2. (   10) -->4294967296<--

# 0190 (unsigned long)
  ft_printf("%lu", -42);
  1. (    1) -->u<--
  2. (   20) -->18446744073709551574<--

# 0191 (unsigned long long)
  ft_printf("%llu", 4999999999);
  1. (    2) -->lu<--
  2. (   10) -->4999999999<--	total =	printf("Hello world, %d %s %c %x %p %o %i\n", INT_MAX, "Hi", '4', test, &test, test, INT_MIN);
	total2 = b_printf("Hello world, %d %s %c %x %p %o %i\n", INT_MAX, "Hi", '4', test, &test, test, INT_MIN);


# 0192 (intmax_t)
  ft_printf("%ju", 4999999999);
  1. (    1) -->u<--
  2. (   10) -->4999999999<--

# 0193 (size_t)
  ft_printf("%ju", 4294967296);
  1. (    1) -->u<--
  2. (   10) -->4294967296<--

# 0195 (unsigned long)
  ft_printf("%hU", 4294967296);
  1. (    1) -->U<--
  2. (   10) -->4294967296<--

# 0197 (unsigned int)
  ft_printf("@moulitest: %.5u", 42);
  1. (   14) -->@moulitest: 5u<--
  2. (   17) -->@moulitest: 00042<--
\n--------------\n
SUCCESS TESTS:\n
   1.      ft_printf("");                                -> ""
   2.      ft_printf("\\n");                             -> "\\n"
   3.      ft_printf("test");                            -> "test"
   4.      ft_printf("test\\n");                         -> "test\\n"
   5.      ft_printf("1234");                            -> "1234"
   6. FAIL ft_printf("%%");                              -> "%"
   7. FAIL ft_printf("%5%");                             -> "    %"
   8. FAIL ft_printf("%-5%");                            -> "%    "
   9. FAIL ft_printf("%.0%");                            -> "%"
  10. FAIL ft_printf("%%", "test");                      -> "%"
  11. FAIL ft_printf("%   %", "test");                   -> "%"
  12.      ft_printf("%x", 42);                          -> "2a"
  13. FAIL ft_printf("%X", 42);                          -> "2A"
  14. FAIL ft_printf("%x", 0);                           -> "0"
  15. FAIL ft_printf("%X", 0);                           -> "0"
  16. FAIL ft_printf("%x", -42);                         -> "ffffffd6"
  17. FAIL ft_printf("%X", -42);                         -> "FFFFFFD6"
  18. FAIL ft_printf("%x", 4294967296);                  -> "0"
  19. FAIL ft_printf("%X", 4294967296);                  -> "0"
  20. FAIL ft_printf("%x", test);                        -> "0"
  21. FAIL ft_printf("%10x", 42);                        -> "        2a"
  22. FAIL ft_printf("%-10x", 42);                       -> "2a        "
  23. FAIL ft_printf("%lx", 4294967296);                 -> "100000000"
  24. FAIL ft_printf("%llX", 4294967296);                -> "100000000"
  25. FAIL ft_printf("%hx", 4294967296);                 -> "0"
  26. FAIL ft_printf("%hhX", 4294967296);                -> "0"
  27. FAIL ft_printf("%jx", 4294967295);                 -> "ffffffff"
  28. FAIL ft_printf("%jx", 4294967296);                 -> "100000000"
  29. FAIL ft_printf("%jx", -4294967296);                -> "ffffffff00000000"
  30. FAIL ft_printf("%jx", -4294967297);                -> "fffffffeffffffff"
  31. FAIL ft_printf("%llx", 9223372036854775807);       -> "7fffffffffffffff"
  32. FAIL ft_printf("%llx", 9223372036854775808);       -> "7fffffffffffffff"
  33. FAIL ft_printf("%010x", 542);                      -> "000000021e"
  34. FAIL ft_printf("%-15x", 542);                      -> "21e            "
  35. FAIL ft_printf("%2x", 542);                        -> "21e"
  36. FAIL ft_printf("%.2x", 5427);                      -> "1533"
  37. FAIL ft_printf("%5.2x", 5427);                     -> " 1533"
  38. FAIL ft_printf("%#x", 42);                         -> "0x2a"
  39. FAIL ft_printf("%#llx", 9223372036854775807);      -> "0x7fffffffffffffff"
  40. FAIL ft_printf("%#x", 0);                          -> "0"
  41. FAIL ft_printf("%#x", 42);                         -> "0x2a"
  42. FAIL ft_printf("%#X", 42);                         -> "0X2A"
  43. FAIL ft_printf("%#8x", 42);                        -> "    0x2a"
  44. FAIL ft_printf("%#08x", 42);                       -> "0x00002a"
  45. FAIL ft_printf("%#-08x", 42);                      -> "0x2a    "
  46. FAIL ft_printf("@moulitest: %#.x %#.0x", 0, 0);    -> "@moulitest:  "
  47. FAIL ft_printf("@moulitest: %.x %.0x", 0, 0);      -> "@moulitest:  "
  48. FAIL ft_printf("@moulitest: %5.x %5.0x", 0, 0);    -> "@moulitest:            "
  49.      ft_printf("%s", "abc");                       -> "abc"
  50.      ft_printf("%s", "this is a string");          -> "this is a string"
  51.      ft_printf("%s ", "this is a string");         -> "this is a string "
  52.      ft_printf("%s  ", "this is a string");        -> "this is a string  "
  53.      ft_printf("this is a %s", "string");          -> "this is a string"
  54.      ft_printf("%s is a string", "this");          -> "this is a string"
  55.      ft_printf("Line Feed %s", "\\n");             -> "Line Feed \\n"
  56. FAIL ft_printf("%10s is a string", "this");        -> "      this is a string"
  57. FAIL ft_printf("%.2s is a string", "this");        -> "th is a string"
  58. FAIL ft_printf("%5.2s is a string", "this");       -> "   th is a string"
  59. FAIL ft_printf("%10s is a string", "");            -> "           is a string"
  60. FAIL ft_printf("%.2s is a string", "");            -> " is a string"
  61. FAIL ft_printf("%5.2s is a string", "");           -> "      is a string"
  62. FAIL ft_printf("%-10s is a string", "this");       -> "this       is a string"
  63. FAIL ft_printf("%-.2s is a string", "this");       -> "th is a string"
  64. FAIL ft_printf("%-5.2s is a string", "this");      -> "th    is a string"
  65. FAIL ft_printf("%-10s is a string", "");           -> "           is a string"
  66. FAIL ft_printf("%-.2s is a string", "");           -> " is a string"
  67. FAIL ft_printf("%-5.2s is a string", "");          -> "      is a string"
  68.      ft_printf("%s %s", "this", "is");             -> "this is"
  69.      ft_printf("%s %s %s", "this", "is", "a");     -> "this is a"
  70.      ft_printf("%s %s %s %s", "this", "is", "a", "multi"); -> "this is a multi"
  71.      ft_printf("%s %s %s %s string. gg!", "this", "is", "a", "multi", "string"); -> "this is a multi string. gg!"
  72.      ft_printf("%s%s%s%s%s", "this", "is", "a", "multi", "string"); -> "thisisamultistring"
  73.      ft_printf("@moulitest: %s", NULL);            -> "@moulitest: (null)"
  74. FAIL ft_printf("%.2c", NULL);                      -> "^@"
  75.      ft_printf("%s %s", NULL, string);             -> "(null) string"
  76.      ft_printf("%c", 42);                          -> "*"
  77. FAIL ft_printf("%5c", 42);                         -> "    *"
  78. FAIL ft_printf("%-5c", 42);                        -> "*    "
  79.      ft_printf("@moulitest: %c", 0);               -> "@moulitest: ^@"
  80. FAIL ft_printf("%2c", 0);                          -> " ^@"
  81.      ft_printf("null %c and text", 0);             -> "null ^@ and text"
  82. FAIL ft_printf("% c", 0);                          -> "^@"
  83.      ft_printf("%o", 40);                          -> "50"
  84. FAIL ft_printf("%5o", 41);                         -> "   51"
  85. FAIL ft_printf("%05o", 42);                        -> "00052"
  86. FAIL ft_printf("%-5o", 2500);                      -> "4704 "
  87. FAIL ft_printf("%#6o", 2500);                      -> " 04704"
  88. FAIL ft_printf("%-#6o", 2500);                     -> "04704 "
  89. FAIL ft_printf("%-05o", 2500);                     -> "4704 "
  90. FAIL ft_printf("%-5.10o", 2500);                   -> "0000004704"
  91. FAIL ft_printf("%-10.5o", 2500);                   -> "04704     "
  92. FAIL ft_printf("@moulitest: %o", 0);               -> "@moulitest: 0"
  93. FAIL ft_printf("@moulitest: %.o %.0o", 0, 0);      -> "@moulitest:  "
  94. FAIL ft_printf("@moulitest: %5.o %5.0o", 0, 0);    -> "@moulitest:            "
  95. FAIL ft_printf("@moulitest: %#.o %#.0o", 0, 0);    -> "@moulitest: 0 0"
  96. FAIL ft_printf("@moulitest: %.10o", 42);           -> "@moulitest: 0000000052"
  97.      ft_printf("%d", 1);                           -> "1"
  98.      ft_printf("the %d", 1);                       -> "the 1"
  99.      ft_printf("%d is one", 1);                    -> "1 is one"
 100.      ft_printf("%d", -1);                          -> "-1"
 101.      ft_printf("%d", 4242);                        -> "4242"
 102.      ft_printf("%d", -4242);                       -> "-4242"
 103.      ft_printf("%d", 2147483647);                  -> "2147483647"
 104.      ft_printf("%d", 2147483648);                  -> "-2147483648"
 105.      ft_printf("%d", -2147483648);                 -> "-2147483648"
 106.      ft_printf("%d", -2147483649);                 -> "2147483647"
 107. FAIL ft_printf("% d", 42);                         -> " 42"
 108. FAIL ft_printf("% d", -42);                        -> "-42"
 109. FAIL ft_printf("%+d", 42);                         -> "+42"
 110. FAIL ft_printf("%+d", -42);                        -> "-42"
 111. FAIL ft_printf("%+d", 0);                          -> "+0"
 112. FAIL ft_printf("%+d", 4242424242424242424242);     -> "-1"
 113. FAIL ft_printf("% +d", 42);                        -> "+42"
 114. FAIL ft_printf("% +d", -42);                       -> "-42"
 115. FAIL ft_printf("%+ d", 42);                        -> "+42"
 116. FAIL ft_printf("%+ d", -42);                       -> "-42"
 117. FAIL ft_printf("%  +d", 42);                       -> "+42"
 118. FAIL ft_printf("%  +d", -42);                      -> "-42"
 119. FAIL ft_printf("%+  d", 42);                       -> "+42"
 120. FAIL ft_printf("%+  d", -42);                      -> "-42"
 121. FAIL ft_printf("% ++d", 42);                       -> "+42"
 122. FAIL ft_printf("% ++d", -42);                      -> "-42"
 123. FAIL ft_printf("%++ d", 42);                       -> "+42"
 124. FAIL ft_printf("%++ d", -42);                      -> "-42"
 125. FAIL ft_printf("%0d", -42);                        -> "-42"
 126. FAIL ft_printf("%00d", -42);                       -> "-42"
 127. FAIL ft_printf("%5d", 42);                         -> "   42"
 128. FAIL ft_printf("%05d", 42);                        -> "00042"
 129. FAIL ft_printf("%0+5d", 42);                       -> "+0042"
 130. FAIL ft_printf("%5d", -42);                        -> "  -42"
 131. FAIL ft_printf("%05d", -42);                       -> "-0042"
 132. FAIL ft_printf("%0+5d", -42);                      -> "-0042"
 133. FAIL ft_printf("%-5d", 42);                        -> "42   "
 134. FAIL ft_printf("%-05d", 42);                       -> "42   "
 135. FAIL ft_printf("%-5d", -42);                       -> "-42  "
 136. FAIL ft_printf("%-05d", -42);                      -> "-42  "
 137. FAIL ft_printf("%hd", 32767);                      -> "32767"
 138. FAIL ft_printf("%hd", −32768);                   -> "0"
 139. FAIL ft_printf("%hd", 32768);                      -> "-32768"
 140. FAIL ft_printf("%hd", −32769);                   -> "0"
 141. FAIL ft_printf("%hhd", 127);                       -> "127"
 142. FAIL ft_printf("%hhd", 128);                       -> "-128"
 143. FAIL ft_printf("%hhd", -128);                      -> "-128"
 144. FAIL ft_printf("%hhd", -129);                      -> "127"
 145. FAIL ft_printf("%ld", 2147483647);                 -> "2147483647"
 146. FAIL ft_printf("%ld", -2147483648);                -> "-2147483648"
 147. FAIL ft_printf("%ld", 2147483648);                 -> "2147483648"
 148. FAIL ft_printf("%ld", -2147483649);                -> "-2147483649"
 149. FAIL ft_printf("%lld", 9223372036854775807);       -> "9223372036854775807"
 150. FAIL ft_printf("%lld", -9223372036854775808);      -> "-9223372036854775808"
 151. FAIL ft_printf("%jd", 9223372036854775807);        -> "9223372036854775807"
 152. FAIL ft_printf("%jd", -9223372036854775808);       -> "-9223372036854775808"
 153. FAIL ft_printf("%zd", 4294967295);                 -> "4294967295"
 154. FAIL ft_printf("%zd", 4294967296);                 -> "4294967296"
 155. FAIL ft_printf("%zd", -0);                         -> "0"
 156. FAIL ft_printf("%zd", -1);                         -> "-1"
 157.      ft_printf("%d", 1);                           -> "1"
 158.      ft_printf("%d %d", 1, -2);                    -> "1 -2"
 159.      ft_printf("%d %d %d", 1, -2, 33);             -> "1 -2 33"
 160.      ft_printf("%d %d %d %d", 1, -2, 33, 42);      -> "1 -2 33 42"
 161.      ft_printf("%d %d %d %d gg!", 1, -2, 33, 42, 0); -> "1 -2 33 42 gg!"
 162. FAIL ft_printf("%4.15d", 42);                      -> "000000000000042"
 163. FAIL ft_printf("%.2d", 4242);                      -> "4242"
 164. FAIL ft_printf("%.10d", 4242);                     -> "0000004242"
 165. FAIL ft_printf("%10.5d", 4242);                    -> "     04242"
 166. FAIL ft_printf("%-10.5d", 4242);                   -> "04242     "
 167. FAIL ft_printf("% 10.5d", 4242);                   -> "     04242"
 168. FAIL ft_printf("%+10.5d", 4242);                   -> "    +04242"
 169. FAIL ft_printf("%-+10.5d", 4242);                  -> "+04242    "
 170. FAIL ft_printf("%03.2d", 0);                       -> " 00"
 171. FAIL ft_printf("%03.2d", 1);                       -> " 01"
 172. FAIL ft_printf("%03.2d", -1);                      -> "-01"
 173. FAIL ft_printf("@moulitest: %.10d", -42);          -> "@moulitest: -0000000042"
 174. FAIL ft_printf("@moulitest: %.d %.0d", 42, 43);    -> "@moulitest: 42 43"
 175. FAIL ft_printf("@moulitest: %.d %.0d", 0, 0);      -> "@moulitest:  "
 176. FAIL ft_printf("@moulitest: %5.d %5.0d", 0, 0);    -> "@moulitest:            "
 177. FAIL ft_printf("%u", 0);                           -> "0"
 178.      ft_printf("%u", 1);                           -> "1"
 179. FAIL ft_printf("%u", -1);                          -> "4294967295"
 180.      ft_printf("%u", 4294967295);                  -> "4294967295"
 181. FAIL ft_printf("%u", 4294967296);                  -> "0"
 182. FAIL ft_printf("%5u", 4294967295);                 -> "4294967295"
 183. FAIL ft_printf("%15u", 4294967295);                -> "     4294967295"
 184. FAIL ft_printf("%-15u", 4294967295);               -> "4294967295     "
 185. FAIL ft_printf("%015u", 4294967295);               -> "000004294967295"
 186. FAIL ft_printf("% u", 4294967295);                 -> "4294967295"
 187. FAIL ft_printf("%+u", 4294967295);                 -> "4294967295"
 188. FAIL ft_printf("%lu", 4294967295);                 -> "4294967295"
 189. FAIL ft_printf("%lu", 4294967296);                 -> "4294967296"
 190. FAIL ft_printf("%lu", -42);                        -> "18446744073709551574"
 191. FAIL ft_printf("%llu", 4999999999);                -> "4999999999"
 192. FAIL ft_printf("%ju", 4999999999);                 -> "4999999999"
 193. FAIL ft_printf("%ju", 4294967296);                 -> "4294967296"
 194.      ft_printf("%U", 4294967295);                  -> "4294967295"
 195. FAIL ft_printf("%hU", 4294967296);                 -> "4294967296"
 196.      ft_printf("%U", 4294967296);                  -> "4294967296"
 197. FAIL ft_printf("@moulitest: %.5u", 42);            -> "@moulitest: 00042"

